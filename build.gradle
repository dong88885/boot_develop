buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'io.franzbecker.gradle-lombok' version '1.12'
    id "org.sonarqube" version "2.6"
}
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


repositories {
    mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('io.springfox:springfox-swagger2:2.8.0')
	compile('io.springfox:springfox-swagger-ui:2.8.0')
	compile('commons-io:commons-io:2.4')
	compile('commons-lang:commons-lang:2.6')
	//compile 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compile('com.h2database:h2')
	//runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('commons-io:commons-io:2.6')
    testCompile('pl.pragmatists:JUnitParams:1.1.1')
}

